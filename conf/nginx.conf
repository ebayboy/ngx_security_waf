

user root;
#worker_processes auto;
worker_processes 1;

worker_rlimit_core 500m;
working_directory /usr/local/nginx/logs;

error_log  logs/error.log info;
pid        /usr/local/nginx/logs/nginx.pid;

load_module modules/ngx_http_modsecurity_module.so;

worker_rlimit_nofile   262144;    

events {
    worker_connections 262144;
}

http {
    modsecurity on;
    modsecurity_rules_file  /usr/local/nginx/conf/main.conf;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;

    log_format  main  '$remote_addr [$time_local] $status $bytes_sent "$request_method $scheme://$host$request_uri" '
        '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" $request_body';

    access_log  logs/access.log  main;
#access_log syslog:server=[2001:db8::1]:12345,facility=local7,tag=nginx,severity=info combined;

    upstream backend {
        server 192.168.137.112:8080;
        keepalive 32;
    }

    proxy_request_buffering off;
    proxy_buffering off;

    #hls server
    server {  
        listen       81;  
#charset koi8-r;  
#access_log  logs/host.access.log  main;  

        location / {  
            root   /usr/local/nginx/html;  
            index  index.html index.htm;  
        }  

#error_page  404              /404.html;  

# redirect server error pages to the static page /50x.html  
#  
        error_page   500 502 503 504  /50x.html;  
        location = /50x.html {  
            root   html;  
        }
    }

    server {
        listen 80 backlog=8192 fastopen=1024 deferred reuseport;

        location / {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_next_upstream_tries 3;
            proxy_pass http://backend;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        }
    }

    server {
        listen 127.0.0.1:1020;

        location /nginx_status {
            stub_status on;
            access_log   off;
            allow 192.168.137.1;
            deny all;
        }

    }
}

rtmp {    
    server {    
        listen 1935;  #监听的端口  
        chunk_size 4000;    
        application hls {  #rtmp推流请求路径  
            live on;    
            hls on;    
            hls_path /usr/local/nginx/html/hls;    
            hls_fragment 5s;    
        }    
    }    
}

